
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.WidgetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId',
  config: 'config',
  layout: 'layout',
  templateId: 'templateId',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.WidgetTemplatesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  types: 'types',
  defaultConfig: 'defaultConfig',
  defaultLayout: 'defaultLayout',
  createAt: 'createAt'
};

exports.Prisma.DashboardScalarFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId',
  isDefault: 'isDefault',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.DashboardWidgetScalarFieldEnum = {
  id: 'id',
  dashboardId: 'dashboardId',
  widgetId: 'widgetId',
  x: 'x',
  y: 'y',
  w: 'w',
  h: 'h',
  instanceConfig: 'instanceConfig',
  createAt: 'createAt',
  updateAt: 'updateAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Widget: 'Widget',
  WidgetTemplates: 'WidgetTemplates',
  Dashboard: 'Dashboard',
  DashboardWidget: 'DashboardWidget'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/tobias/Desktop/nextjs/nrx/app/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "/home/tobias/Desktop/nextjs/nrx/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.8.2",
  "engineVersion": "2060c79ba17c6bb9f5823312b6f6b7f4a845738e",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../app/generated/prisma\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id         String      @id @default(uuid())\n  email      String      @unique\n  name       String\n  password   String\n  createAt   DateTime    @default(now())\n  updateAt   DateTime    @default(now())\n  dashboards Dashboard[]\n  widgets    Widget[]\n}\n\nmodel Widget {\n  id               String            @id @default(uuid())\n  name             String\n  userId           String\n  config           String // La configuración para esta instancia específica del widget\n  layout           String // El layout para esta instancia específica (puede ser derivado del template o sobreescrito)\n  templateId       String? // Campo nuevo: Enlace al modelo WidgetTemplates\n  createAt         DateTime          @default(now())\n  updateAt         DateTime          @default(now())\n  user             User              @relation(fields: [userId], references: [id])\n  dashboardWidgets DashboardWidget[]\n  widgetTemplate   WidgetTemplates?  @relation(fields: [templateId], references: [id], onDelete: Cascade, name: \"WidgetTemplate\") // Nueva relación\n}\n\nmodel WidgetTemplates {\n  id            String   @id @default(uuid())\n  title         String\n  description   String\n  types         String[]\n  defaultConfig String\n  defaultLayout String\n  createAt      DateTime @default(now())\n  widgets       Widget[] @relation(\"WidgetTemplate\")\n}\n\nmodel Dashboard {\n  id               String            @id @default(uuid())\n  name             String\n  userId           String\n  user             User              @relation(fields: [userId], references: [id])\n  isDefault        Boolean           @default(false)\n  createAt         DateTime          @default(now())\n  updateAt         DateTime          @default(now())\n  dashboardWidgets DashboardWidget[]\n}\n\nmodel DashboardWidget {\n  id             String    @id @default(uuid())\n  dashboardId    String\n  dashboard      Dashboard @relation(fields: [dashboardId], references: [id], onDelete: Cascade)\n  widgetId       String\n  widget         Widget    @relation(fields: [widgetId], references: [id], onDelete: Cascade)\n  x              Int\n  y              Int\n  w              Int\n  h              Int\n  instanceConfig Json?\n  createAt       DateTime  @default(now())\n  updateAt       DateTime  @default(now())\n\n  @@unique([dashboardId, widgetId])\n}\n",
  "inlineSchemaHash": "4063479071ef944ec317d510d2049d7a8aeffdbd013739d0514a3a6e2afda69c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dashboards\",\"kind\":\"object\",\"type\":\"Dashboard\",\"relationName\":\"DashboardToUser\"},{\"name\":\"widgets\",\"kind\":\"object\",\"type\":\"Widget\",\"relationName\":\"UserToWidget\"}],\"dbName\":null},\"Widget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"layout\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWidget\"},{\"name\":\"dashboardWidgets\",\"kind\":\"object\",\"type\":\"DashboardWidget\",\"relationName\":\"DashboardWidgetToWidget\"},{\"name\":\"widgetTemplate\",\"kind\":\"object\",\"type\":\"WidgetTemplates\",\"relationName\":\"WidgetTemplate\"}],\"dbName\":null},\"WidgetTemplates\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"types\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultConfig\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultLayout\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"widgets\",\"kind\":\"object\",\"type\":\"Widget\",\"relationName\":\"WidgetTemplate\"}],\"dbName\":null},\"Dashboard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DashboardToUser\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dashboardWidgets\",\"kind\":\"object\",\"type\":\"DashboardWidget\",\"relationName\":\"DashboardToDashboardWidget\"}],\"dbName\":null},\"DashboardWidget\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dashboardId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dashboard\",\"kind\":\"object\",\"type\":\"Dashboard\",\"relationName\":\"DashboardToDashboardWidget\"},{\"name\":\"widgetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"widget\",\"kind\":\"object\",\"type\":\"Widget\",\"relationName\":\"DashboardWidgetToWidget\"},{\"name\":\"x\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"y\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"w\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"h\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"instanceConfig\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

